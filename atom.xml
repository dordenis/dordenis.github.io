<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ajaxblog]]></title>
  <link href="http://dordenis.github.io/atom.xml" rel="self"/>
  <link href="http://dordenis.github.io/"/>
  <updated>2013-08-06T13:16:59+04:00</updated>
  <id>http://dordenis.github.io/</id>
  <author>
    <name><![CDATA[AjaxBlog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Шпарагалка по mysqldump]]></title>
    <link href="http://dordenis.github.io/mysql/cheatsheet-on-mysqldump/"/>
    <updated>2013-08-05T19:55:00+04:00</updated>
    <id>http://dordenis.github.io/mysql/cheatsheet-on-mysqldump</id>
    <content type="html"><![CDATA[<p>Утилита mysqldump позволяет получить дамп содержимого базы данных или совокупности баз для создания резервной копии или пересылки данных на другой SQL-сервер (не обязательно MySQL-сервер). Дамп будет содержать набор команд SQL для создания и/или заполнения таблиц.</p>

<p>Так же mysqldump имеет возможность развертывания баз данных из созданного sql-файла.</p>

<!-- more -->


<h1>Создание дампа</h1>

<p>Разберем пример простейшее использования, задампим базу данных &ldquo;database&rdquo; при помощи перенаправления потока в файл &ldquo;database.sql&rdquo;:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysqldump</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">h</span> <span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span> <span class="o">-</span><span class="n">p</span> <span class="k">database</span> <span class="o">&gt;</span> <span class="k">database</span><span class="p">.</span><span class="k">sql</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>-u</strong> или <strong>-–user</strong>=&hellip; &ndash; имя пользователя</li>
<li><strong>-h</strong> или <strong>&mdash;host</strong>=&hellip; &ndash; удаленный хост (для локального хоста можно опустить этот параметр)</li>
<li><strong>-p</strong> или <strong>&mdash;password</strong> &ndash; запросить пароль</li>
<li><strong>database</strong> &ndash; имя базы данных</li>
<li><strong>database.sql</strong> &ndash; файл для дампа</li>
</ul>


<h1>Развертывание дампа</h1>

<p>Перенаправляем поток в обратную сторону и развертываем базу данных:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysql</span> <span class="o">-</span><span class="n">uroot</span> <span class="o">-</span><span class="n">h</span> <span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span> <span class="o">-</span><span class="n">p</span> <span class="k">database</span> <span class="o">&lt;</span> <span class="k">database</span><span class="p">.</span><span class="k">sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Или через mysql console:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">use</span> <span class="k">database</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">source</span> <span class="k">database</span><span class="p">.</span><span class="k">sql</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Пример использование некоторых параметров</h1>

<p>Например, нам нужны данные с &ldquo;продакшен версии базы&rdquo; для &ldquo;версии разработчика&rdquo;, то есть нам нужна &ldquo;песочница&rdquo;. Выбираем не более 100 записей:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysqldump</span> <span class="o">-</span> <span class="n">uroot</span> <span class="o">-</span><span class="n">h</span> <span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span> <span class="o">-</span><span class="n">p</span> <span class="c1">--where=&quot;true limit 100&quot; database &gt; database.sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Или нам нужна только структура, без данных:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysqldump</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">h</span> <span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span><span class="p">.</span><span class="mi">82</span> <span class="o">-</span><span class="n">p</span> <span class="c1">--no-data database &gt; database.sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Делаем дамп в архив:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysqldump</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="k">database</span> <span class="o">|</span> <span class="n">gzip</span> <span class="o">&gt;</span> <span class="o">~/</span><span class="k">database</span><span class="p">.</span><span class="k">sql</span><span class="p">.</span><span class="n">gz</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Шпаргалка по параметрам</h1>

<p>Приведу некоторые параметры, которые могут понадобится при работе с утилитой mysqldump.</p>

<ul>
<li><strong>&mdash;add-drop-database</strong> Добавляет оператор DROP DATABASE перед каждым оператором CREATE DATABASE.</li>
<li><strong>&mdash;add-drop-table</strong> Добавляет оператор DROP TABLE перед каждым оператором CREATE TABLE.</li>
<li><strong>&mdash;add-locks</strong> Добавляет оператор LOCK TABLES перед выполнением и UNLOCK TABLE после выполнения каждого дампа таблицы (для ускорения доступа к MySQL).</li>
<li><strong>&mdash;all-databases, -A</strong> Сохраняет все таблицы из всех баз данных, которые находятся под управлением текущего сервера.</li>
<li><strong>&mdash;allow-keywords</strong> Разрешить создавать имена столбцов, которые совпадают с ключевыми словами. Отсутствие конфликтов обеспечивается прибавлением имени таблицы в качестве префикса к имени каждого столбца.</li>
<li><strong>&mdash;comments, -i</strong> Данный параметр позволяет добавить в дамп дополнительную информацию, такую, как версия mysqldump, версия MySQL, имя хоста, на котором расположен сервер MySQL.</li>
<li><strong>&mdash;compact</strong> Данный параметр требует от mysqldump создать дамп, используя как можно более компактный формат. Параметр является противоположным &mdash;comments.</li>
<li><strong>&mdash;compatible=name</strong> Параметр генерирует вывод, который совместим с другими СУБД или более старыми версиями MySQL. Вместо ключевого слова name можно использовать: &ldquo;ansi&rdquo;, &ldquo;mysql323&rdquo;, &ldquo;mysql40&rdquo;, &ldquo;postgresql&rdquo;, &ldquo;oracle&rdquo;, &ldquo;mssql&rdquo;, &ldquo;db2&rdquo;, &ldquo;maxdb&rdquo;, &ldquo;no_key_options&rdquo;, &ldquo;no_table_options&rdquo;, &ldquo;no_field_options&rdquo;. Можно использовать несколько значений, разделив их запятыми.</li>
<li><strong>&mdash;complete-insert, -c</strong> Используется полная форма оператора INSERT (с именами столбцов).</li>
<li><strong>&mdash;create-options</strong> Добавляет дополнительную информацию в операторы CREATE TABLE. Это может быть тип таблицы, начальное значение AUTO_INCREMENT и другие параметры.</li>
<li><strong>&mdash;databases, -B</strong> Параметр позволяет указать имена нескольких баз данных, для которых необходимо создать дамп.</li>
<li><strong>&mdash;delayed</strong> Использовать команду INSERT DELAYED при вставке строк.</li>
<li><strong>&mdash;delete-master-logs</strong> На главном сервере репликации автоматически удаляются бинарные логи (logbin) после того, как дамп был успешно создан при помощи mysqldump. Этот параметр автоматически включает параметр &ldquo;&mdash;master-data&rdquo;.</li>
<li><strong>&mdash;disable-keys, -K</strong> Для каждой таблицы, окружает оператор INSERT выражениями /<em>!40000 ALTER TABLE tbl_name DISABLE KEYS </em>/; и /<em>!40000 ALTER TABLE tbl_name ENABLE KEYS </em>/; в выводе результата дампа. Это ускорит загрузку данных на сервер для таблиц типа MyISAM, так как индексы создаются после внесения всех данных.</li>
<li><strong>&mdash;extended-insert, -e</strong> Использовать команду INSERT с новым многострочным синтаксисом (повышает компактность и быстродействие операторов ввода).</li>
<li><strong>&mdash;flush-logs, -F</strong> Записать на диск данные системного журнала из буфера MySQL-сервера перед началом выполнения дампа.</li>
<li><strong>&mdash;force, -f</strong> Продолжать даже если в процессе создания дампа произошла ошибка.</li>
<li><strong>&mdash;hex-blob</strong> Параметр позволяет представить бинарные данные в полях типа BINARY, VARBINARY, BLOB и BIT в шестнадцатеричном формате. Так последовательность &ldquo;abc&rdquo; будет заменена на 0x616263.</li>
<li><strong>&mdash;ignore-table=db_name.tbl_name</strong> Позволяет игнорировать таблицу tbl_name базы данных db_name при создании дампа. Если из дампа необходимо исключить несколько таблиц, необходимо использовать несколько параметров &ldquo;&mdash;ignore-table&rdquo;, указывая по одной таблице в каждом из параметров.</li>
<li><strong>&mdash;insert-ignore</strong> Добавляет ключевое слово IGNORE в оператор INSERT.</li>
<li><strong>&mdash;lock-all-tables, -x</strong> Указание этого параметра приводит к блокировке всех таблиц во всех базах данных на время создания полного дампа всех баз данных.</li>
<li><strong>&mdash;lock-tables, -l</strong> Указание этого параметра приводит к блокировке таблиц базы данных, для которой создается дамп.</li>
<li><strong>&mdash;no-autocommit</strong> Включает все операторы INSERT, относящиеся к одной таблице, в одну транзакцию, что приводит к увеличению скорости загрузки данных.</li>
<li><strong>&mdash;no-create-db, -n</strong> Подавляет создание в дампе операторов CREATE DATABASE, которые автоматически добавляются при использовании параметров &mdash;databases и &mdash;all-databases.</li>
<li><strong>&mdash;no-data, -d</strong> Подавляет создание операторов INSERT в дампе, что может быть полезно при создании дампа структуры базы данных без самих данных.</li>
<li><strong>&mdash;opt</strong> Параметр предназначен для оптимизации скорости резервирования данных и является сокращением, включающим следующие опции: &mdash;quick &mdash;add-drop-table &mdash;add-locks &mdash;create-options &mdash;disable-keys &mdash;extended-insert &mdash;lock-tables &mdash;set-charset. Начиная с MySQL 4.1, параметр &mdash;opt используется по умолчанию, т.е. все вышеперечисленные параметры включаются по умолчанию, даже если они не указываются. Для того чтобы исключить такое поведение, необходимо воспользоваться параметров &mdash;skip-opt</li>
<li><strong>&mdash;order-by-primary</strong> Указание параметра приводит к тому. что каждая таблица сортируется по первичному ключу или первому уникальному индексу.</li>
<li><strong>&mdash;port, -P</strong> Номер TCP порта, используемого для подключения к хосту.</li>
<li><strong>&mdash;protocol={TCP|SOCKET|PIPE|MEMORY}</strong> Параметр позволяет задать протокол подключения к серверу.</li>
<li><strong>&mdash;quick, -q</strong> Позволяет начать формирование дампа, не дожидаясь полной загрузки данных с сервера и экономя тем самым память.</li>
<li><strong>&mdash;quote-names, -Q</strong> Помещает имена баз данных, таблиц и столбцов в обратные апострофы `. Начиная с MySQL 4.1, данный параметр включен по умолчанию.</li>
<li><strong>&mdash;replace</strong> Добавляет ключевое слово REPLACE в оператор INSERT. Данный параметр впервые появился в MySQL 5.1.3.</li>
<li><strong>&mdash;result-file=/path/to/file, -r /path/to/file</strong> Параметр направляет дамп в файл file. Этот параметр особенно удобен в Windows, без использования командной строки. когда можно перенаправить результат в файл при помощи последовательностей > и >>.</li>
<li><strong>&mdash;routines, -R</strong> Данный параметр создает дамп хранимых процедур и функций. Доступен с MySQL 5.1.2.</li>
<li><strong>&mdash;single-transaction</strong> Параметр создает дамп в виде одной транзакции.</li>
<li><strong>&mdash;skip-comments</strong> Данный параметр позволяет подавить вывод в дамп дополнительной информации.</li>
<li><strong>&mdash;socket=/path/to/socket, -S /path/to/socket</strong> Файл сокета для подсоединения к localhost.</li>
<li><strong>&mdash;tab=/path/, -T /path/</strong> При использовании этого параметра в каталоге path для каждой таблицы создаются два отдельных файла: tbl_name.sql, содержащий оператор CREATE TABLE, и tbl_name.txt, который содержит данные таблиц, разделенные символом табуляции. Формат данных может быть переопределен явно с помощью параметров &mdash;fields-xxx и &mdash;lines-xxx.</li>
<li><strong>&mdash;tables</strong> Перекрывает действия параметра &mdash;databases (-B). Все аргументы, следующие за этим параметром, трактуются как имена таблиц.</li>
<li><strong>&mdash;triggers</strong> Создается дамп триггеров. Этот параметр включен по умолчанию. для его отключения следует использовать параметр &mdash;skip-triggers.</li>
<li><strong>&mdash;events, -E</strong> Создается дамп событий. Смотрите MySQL Event Scheduler или встроенный диспетчер событий в MySQL.</li>
<li><strong>&mdash;tz-utc</strong> при использовании данного параметра в дамп будет добавлен оператор вида SET TIME_ZONE=&lsquo;+00:00&rsquo;, который позволит обмениваться дампа в различных временных зонах.</li>
<li><strong>&mdash;verbose, -v</strong> Расширенный режим вывода. Вывод более детальной информации о работе программы.</li>
<li><strong>&mdash;version, -V</strong> Вывести информацию о версии программы.</li>
<li><strong>&mdash;where=&lsquo;where-condition&rsquo;, -w &lsquo;where-condition&rsquo;</strong> Выполнить дамп только выбранных записей. Обратите внимание, что кавычки обязательны.</li>
<li><strong>&mdash;xml, -X</strong> Представляет дамп базы данных в виде XML.</li>
<li><strong>&mdash;first-slave, -x</strong> Блокирует все таблицы во всех базах данных.</li>
<li><strong>&mdash;debug=&hellip;, &ndash;#</strong> Отслеживать прохождение программы (для отладки).</li>
<li><strong>&mdash;help</strong> Вывести справочную информацию и выйти из программы.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Создание плагинов для Octopress]]></title>
    <link href="http://dordenis.github.io/octopress/creating-plugins-for-octopress/"/>
    <updated>2013-07-22T01:04:00+04:00</updated>
    <id>http://dordenis.github.io/octopress/creating-plugins-for-octopress</id>
    <content type="html"><![CDATA[<p>Octopress идет с несколькими предустановленными плагинами. Которые охватывают практически все аспекты блоггерства, от категории до видео. Плагины можно легко создавать, расширяя базовый функционал Octopress. Создадим плагин который добавит новый тег для шаблонизатора Liquid.</p>

<p>В качестве примера, создадим новый тег, который позволит вставлять картинки размещенные на S3 Amazon.</p>

<!-- more -->


<p>Создадим файл s3_image_tag.rb.</p>

<ul>
<li>Определим новый класс наследуемый от Liquid::Tag</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">S3ImageTag</span> <span class="o">&lt;</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Tag</span>
</span><span class='line'>    <span class="c1"># здесь будет наш код</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Все теги шаблонизатора Liquid наследуютьса от класса Liquid::Tag. Liquid ожидает что класс имеет метод render который и  реализует отрисовку тега.</p>

<ul>
<li>Инициализация параметров</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span>
</span><span class='line'>  <span class="k">super</span>
</span><span class='line'>  <span class="vi">@text</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="n">strip</span>
</span><span class='line'>  <span class="vi">@text</span> <span class="o">=~</span> <span class="sr">/(\w+\.\w+)(\sbucket:)?(\w*)/i</span>
</span><span class='line'>  <span class="vi">@file_name</span> <span class="o">=</span> <span class="vg">$1</span>
</span><span class='line'>  <span class="vi">@bucket_name</span> <span class="o">=</span> <span class="vg">$3</span><span class="o">.</span><span class="n">empty?</span> <span class="p">?</span> <span class="no">Jekyll</span><span class="o">.</span><span class="n">configuration</span><span class="p">({})</span><span class="o">[</span><span class="s1">&#39;aws_bucket&#39;</span><span class="o">]</span> <span class="p">:</span> <span class="vg">$3</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Обратите внимание, что Liquid вызовет наш метод инициализации с тремя параметрами: имя тега, текст в самом теге, и маркер.</p>

<p>Во первых, мы вызвали метод super, для инициализации родительского класса. Далее, мы очистили текст от начальных и конечных пробелов. С помощью регулярного выражения нашли необходимые значения для наших переменных. Для переменной @bucket_name, если она не найдена, берем значения из конфигфайла _config.yml.</p>

<ul>
<li>Определим метод render</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@file_name</span> <span class="o">&amp;&amp;</span> <span class="vi">@bucket_name</span>
</span><span class='line'>    <span class="s2">&quot;&lt;img src=&#39;https://s3.amazonaws.com/</span><span class="si">#{</span><span class="vi">@bucket_name</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="vi">@file_name</span><span class="si">}</span><span class="s2">&#39;&gt;&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="s2">&quot;Error processing input.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Отдаем HTML тег для нужного изображения. Если один из параметров отсутствует, возвращаемся сообщением об ошибке.</p>

<ul>
<li>Регистрируем новый тег</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;s3_image&#39;</span><span class="p">,</span> <span class="ss">Jekyll</span><span class="p">:</span><span class="ss">:S3ImageTag</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Liquid::Template привязывает тег s3_image к нашему классу Jekyll::S3ImageTag, который и будет его обрабатывать.</p>

<ul>
<li><p>Добавляем наш файл s3_image_tag.rb в папку plugins нашего блога.  Octopress автоматически загружает все плагины из этой папки.</p></li>
<li><p>Зададим значение по умолчанию для переменой aws_bucket в конфиге _config.yml</p></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># ----------------------- #</span>
</span><span class='line'><span class="c">#   3rd Party Settings    #</span>
</span><span class='line'><span class="c"># ----------------------- #</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Amazon S3 Images</span>
</span><span class='line'>aws_bucket: thoughts_on_rails
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Пример использование нового тега в наших постах</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Here is an image:   {% s3_image foo.jpeg bucket:bar %}
</span></code></pre></td></tr></table></div></figure>


<p>P.S. Оригинальный источник <a href="http://www.thoughtsonrails.com/creating-plugins-for-octopress/">http://www.thoughtsonrails.com/creating-plugins-for-octopress/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Мультиязычный сайт с помощью Yii]]></title>
    <link href="http://dordenis.github.io/yii/multilanguage-website-with-yii/"/>
    <updated>2013-07-21T15:33:00+04:00</updated>
    <id>http://dordenis.github.io/yii/multilanguage-website-with-yii</id>
    <content type="html"><![CDATA[<p>Для одного из проекта, возникла необходимость в организации поддержки мультиязычности на сайте. Причем URL должны быть в определенном виде:</p>

<p><a href="http://site.ru/ru/contacts">http://site.ru/ru/contacts</a> для русского языка  <br/>
<a href="http://site.ru/en/contacts">http://site.ru/en/contacts</a> для английского языка</p>

<!-- more -->


<h1>1. Расширяем CUrlManager.</h1>

<p>Создаем файл <strong>protected/components/UrlManager.php</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">UrlManager</span> <span class="k">extends</span> <span class="nx">CUrlManager</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">createUrl</span><span class="p">(</span><span class="nv">$route</span><span class="p">,</span><span class="nv">$params</span><span class="o">=</span><span class="k">array</span><span class="p">(),</span><span class="nv">$ampersand</span><span class="o">=</span><span class="s1">&#39;&amp;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$params</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">hasState</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">))</span>
</span><span class='line'>                <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">getState</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">cookies</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]))</span>
</span><span class='line'>                <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">cookies</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">value</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$params</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]</span><span class="o">=</span><span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">parent</span><span class="o">::</span><span class="na">createUrl</span><span class="p">(</span><span class="nv">$route</span><span class="p">,</span> <span class="nv">$params</span><span class="p">,</span> <span class="nv">$ampersand</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Согласно нашему условию, выбранный язык должен быть частью URL. Это значит, что $_GET[&lsquo;language&rsquo;] должен быть определен. Для реализации этого мы переопределяем функцию createUrl() класса CUrlManager. Если язык в строке не указан, тогда мы его ищем в переменной сессии, затем в куках, и если до этого пользователь не менял язык то устанавливаем язык приложения по умолчанию. И затем формируем правильную строку URL уже с языком как параметр.</p>

<h1>2. Редактируем наш Controller</h1>

<p>Добавляем следующий код в <strong>protected/components/Controller.php</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$module</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$module</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// If there is a post-request, redirect the application to the provided url of the selected language</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$language</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">];</span>
</span><span class='line'>        <span class="nv">$MultilangReturnUrl</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="nv">$language</span><span class="p">];</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$MultilangReturnUrl</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Set the application language if provided by GET, session or cookie</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">];</span>
</span><span class='line'>        <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">setState</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="nv">$cookie</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">CHttpCookie</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="nv">$cookie</span><span class="o">-&gt;</span><span class="na">expire</span> <span class="o">=</span> <span class="nb">time</span><span class="p">()</span> <span class="o">+</span> <span class="p">(</span><span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">365</span><span class="p">);</span> <span class="c1">// (1 year)</span>
</span><span class='line'>        <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">cookies</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$cookie</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">hasState</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">getState</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">cookies</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">cookies</span><span class="p">[</span><span class="s1">&#39;language&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">value</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">gettext</span><span class="o">-&gt;</span><span class="na">setLocale</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Мы расширяем конструктор класса и добавляем язык для приложения. Так как все контроллеры будут наследоваться с этого контроллера, язык приложения будет установлен явно на каждый запрос.
Если не установленYii::app()&ndash;>language явно для каждого запроса в URL, он будет браться из конфигурационного файла приложения. Если же он не указан в конфигурационном фале, он будет идентичен Yii::app()&ndash;>sourceLanguage, который по умолчанию &lsquo;en_us&rsquo;.</p>

<h1>3. Редактируем конфиг файл</h1>

<p>Вносим изменения в <strong>protected/config/main.php</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">return </span>array<span class="o">(</span>
</span><span class='line'>    ...
</span><span class='line'>    <span class="s1">&#39;sourceLanguage&#39;</span><span class="o">=</span>&gt;<span class="s1">&#39;en&#39;</span>,
</span><span class='line'>    <span class="s1">&#39;language&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;ru&#39;</span>,
</span><span class='line'>    ...
</span><span class='line'>
</span><span class='line'>    // application components
</span><span class='line'>    <span class="s1">&#39;components&#39;</span> <span class="o">=</span>&gt; array<span class="o">(</span>
</span><span class='line'>        <span class="s1">&#39;gettext&#39;</span> <span class="o">=</span>&gt; array<span class="o">(</span>
</span><span class='line'>            <span class="s1">&#39;class&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;ext.gettext.components.GetText&#39;</span>,
</span><span class='line'>
</span><span class='line'>            // следующие параметры не обезательны
</span><span class='line'>            <span class="s1">&#39;domain&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;имя домена&#39;</span>, // defualt messages
</span><span class='line'>            <span class="s1">&#39;locale_dir&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;путь до папки с переводами&#39;</span>, // defualt Yii::app<span class="o">()</span>-&gt;basePath.DIRECTORY_SEPARATOR.<span class="s1">&#39;messages&#39;</span>;
</span><span class='line'>            <span class="s1">&#39;locale&#39;</span> <span class="o">=</span>&gt; array<span class="o">(</span>
</span><span class='line'>                // установленные на компьютере локале
</span><span class='line'>                // locale -a
</span><span class='line'>                <span class="s1">&#39;ru&#39;</span> <span class="o">=</span>&gt;<span class="s1">&#39;ru_RU&#39;</span>,
</span><span class='line'>                <span class="s1">&#39;en&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;en_US&#39;</span>,
</span><span class='line'>             <span class="o">)</span>
</span><span class='line'>        <span class="o">)</span>,
</span><span class='line'>        ...
</span><span class='line'>    <span class="o">)</span>;
</span><span class='line'><span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<h1>4. Добавляем расширение</h1>

<p>Создаем файл <strong>protected/extensions/gettext/components/GetText.php</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">GetText</span> <span class="k">extends</span> <span class="nx">CApplicationComponent</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var GetText domain.</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="nv">$domain</span> <span class="o">=</span> <span class="s1">&#39;messages&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var Language in yii.</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="nv">$language</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var Directory containing gettext messages.</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="nv">$locale_dir</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var array locale (locale -a)</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="nv">$locale</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;ru&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ru_RU&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;en&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;en_US&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * Initialize php&#39;s gettext.</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setLocale</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * Bind the gettext domain and make it the default</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">bindDomain</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">bindtextdomain</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">domain</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale_dir</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nx">Exception</span><span class="p">(</span><span class="s2">&quot;Found folder to translations </span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale_dir</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nb">bind_textdomain_codeset</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">domain</span><span class="p">,</span> <span class="s1">&#39;utf-8&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">textdomain</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">domain</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * Get canonical locale to the format required for gettext</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getLocale</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$locale</span> <span class="o">=</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale</span><span class="p">[</span><span class="nv">$id</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale</span><span class="p">[</span><span class="nv">$id</span><span class="p">]</span> <span class="o">:</span> <span class="nv">$id</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$locale</span> <span class="o">=</span> <span class="nb">explode</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">,</span> <span class="nv">$locale</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$locale</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span> <span class="nv">$locale</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nx">strtoupper</span><span class="p">(</span><span class="nv">$locale</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">implode</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">,</span> <span class="nv">$locale</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * Set locale</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">setLocale</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">?</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">language</span> <span class="o">:</span> <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">language</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$locale</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLocale</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">language</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale_dir</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale_dir</span> <span class="o">?</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">locale_dir</span> <span class="o">:</span> <span class="nx">Yii</span><span class="o">::</span><span class="na">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">basePath</span> <span class="o">.</span> <span class="nx">DIRECTORY_SEPARATOR</span> <span class="o">.</span> <span class="s1">&#39;messages&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">setlocale</span><span class="p">(</span><span class="nx">LC_ALL</span><span class="p">,</span> <span class="nv">$locale</span> <span class="o">.</span> <span class="s1">&#39;.utf8&#39;</span><span class="p">,</span> <span class="nv">$locale</span> <span class="o">.</span> <span class="s1">&#39;.utf-8&#39;</span><span class="p">,</span> <span class="nv">$locale</span> <span class="o">.</span> <span class="s1">&#39;.UTF8&#39;</span><span class="p">,</span> <span class="nv">$locale</span> <span class="o">.</span> <span class="s1">&#39;.UTF-8&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nx">Exception</span><span class="p">(</span><span class="s2">&quot;Not installed in the system locale </span><span class="si">{</span><span class="nv">$locale</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-Language: &#39;</span> <span class="o">.</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">language</span><span class="p">));</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">bindDomain</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>5. Размешаем переводы</h1>

<p>Создаем в папке <strong>protected/messages</strong>, следующию структуру каталогов. Где и размещаем наши переводы.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>messages
</span><span class='line'>        en_US
</span><span class='line'>             LC_MESSAGES
</span><span class='line'>                      messages.mo
</span><span class='line'>                      messages.po
</span><span class='line'>        ru_RU
</span><span class='line'>             LC_MESSAGES
</span><span class='line'>                      messages.mo
</span><span class='line'>                      messages.po
</span></code></pre></td></tr></table></div></figure>


<h1>6. Что делать если не работает</h1>

<ol>
<li>Проверить установлена в систему нужная локаль (locale -a)</li>
<li>Проверить работу setlocale(), должно вернуться имя локале</li>
<li>Проверить работу bindtextdomain(), должно вернуться путь до файлов перевода</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress - блоггинг для гиков]]></title>
    <link href="http://dordenis.github.io/octopress/octopress-blogging-for-geeks/"/>
    <updated>2013-07-18T20:20:00+04:00</updated>
    <id>http://dordenis.github.io/octopress/octopress-blogging-for-geeks</id>
    <content type="html"><![CDATA[<p>Меня всем устраивал мой маленький блог на Rasberry Pi, пока жестокая реальность не напомнила мне в какой стране я живу. После аварийных выключений света, у меня убился раздел на флешки с установленной ОС. Переустанавливать было лень, и я прекрасно понимал, что это не последняя переустановка. Нужно искать другой вариант&hellip; на горизонте появился Octopress.</p>

<!-- more -->


<p>Octopress &ndash; генератор статических сайтов. Мы берем шаблоны статей, созданные нами и переводим в статические html страницы.</p>

<p>Плюсы:</p>

<ul>
<li><strong>Скорость.</strong> Мы разгружаем сервак, так как на нем только html+js+css+images.</li>
<li><strong>Дешевизна.</strong> Нам не нужно устанавливать php, базы данных, кеш сервера и т.д. Соответственно мы можем арендовать самый дешевый сервер.</li>
<li><strong>Удобство.</strong> Все посты хранятса в формате <a href="http://ru.wikipedia.org/wiki/Markdown">маркдаун</a>. Набирать текст в нем одно удовольствие. Ты тратишь время над содержимое статьи, а не ее внешний вид.</li>
</ul>


<p>Минусы:</p>

<ul>
<li>Главный и единственный минус, проистекает от его плюсов. У нас нет динамического контента. Если мы хотим добавить динамику нашему сайту. то нужно использовать js. Благо уровень текущего js вырос. Да и сторонних сервисов которые предоставляют API для нашего js, предостаточно.</li>
</ul>


<h1>1. Устанавливаем Octopress</h1>

<p>1. Устанавливаем <a href="https://rvm.beginrescueend.com/rvm/install/">rvm</a></p>

<p>2. Устанавливаем Ruby</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install x.x.x
</span><span class='line'>rvm use x.x.x
</span></code></pre></td></tr></table></div></figure>


<p>3. <a href="http://octopress.org/docs/setup/">Устанавливаем Octopress</a></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>apt-get install python-dev <span class="c"># для плагина подсветки синтаксиса</span>
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>ruby --version <span class="c"># report Ruby 1.9.3</span>
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>4. <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">Выбираем тему</a> по душе</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone GIT_URL .themes/THEME_NAME
</span><span class='line'>rake install<span class="o">[</span><span class="s1">&#39;THEME_NAME&#39;</span><span class="o">]</span>
</span><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<p>5. Редактируем <a href="http://octopress.org/docs/configuring/">конфигурационный файл</a> <strong>_config.yml</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root: /
</span><span class='line'>permalink: /:categories/:title/
</span><span class='line'><span class="nb">source</span>: <span class="nb">source</span>
</span><span class='line'>destination: public
</span><span class='line'>plugins: plugins
</span><span class='line'>code_dir: downloads/code
</span><span class='line'>category_dir: categories
</span></code></pre></td></tr></table></div></figure>


<p>6. <a href="http://octopress.org/docs/theme/template/">Правим файлы</a> под свои предпочтения в директориях</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sass                       <span class="c"># цветовая гамма и стили</span>
</span><span class='line'><span class="nb">source</span>/                   <span class="c"># папка с исходными файлами. </span>
</span><span class='line'>      _includes/          <span class="c"># шаблоны частей сайта</span>
</span><span class='line'>      _layouts/           <span class="c"># основные шаблоны для страниц, постов и архивов</span>
</span><span class='line'>              asides/     <span class="c"># шаблоны боковой панели</span>
</span><span class='line'>              custom/     <span class="c"># пользовательские шаблоны</span>
</span><span class='line'>              post/       <span class="c"># шаблоны страницы post (metadata, sharing &amp; comment)</span>
</span><span class='line'>      _posts/             <span class="c"># все посты в markdown</span>
</span></code></pre></td></tr></table></div></figure>


<p>7. <a href="http://maxmikheev.ru/blog/2012/07/13/russian-dates-in-octopress/">Русифицируем даты</a> в Octopress</p>

<p>8. Ставим <a href="https://github.com/imathis/octopress/wiki/3rd-party-plugins">сторонние плагины</a>. Некоторые интересные плагины:</p>

<ul>
<li><a href="https://github.com/neerajcse/octopress-calendar-aside">octopress-calendar-aside</a> &ndash; календарик как в WordPress</li>
<li><a href="https://github.com/matthiasbeyer/jekyll_category_tree">jekyll_category_tree</a> &ndash; категории деревом</li>
<li><a href="https://github.com/alswl/octopress-category-list">Tag Cloud for Octopress</a> &ndash; категории списком и облако тегов</li>
<li><a href="https://github.com/tokkonopapa/octopress-tagcloud">Tag Cloud for Octopress</a> &ndash; альтернатива вышестоящего плагина</li>
<li><a href="https://github.com/octopress-themes/popular-posts">Octopress Popular Posts Plugin</a> &ndash; список популярных постов на основе Google page rank</li>
<li><a href="https://github.com/jcftang/octopress-relatedposts">Related posts for Octopress</a> &ndash; список похожих постов</li>
<li><a href="https://github.com/robbyedwards/octopress-tag-pages">Plugin for Octopress to generate tag pages</a> &ndash; плагин создает страницы тегов</li>
</ul>


<h1>2. Размещение на Github Pages</h1>

<p>Создаем на Github репозиторий с именем <a href="http://octopress.org/docs/deploying/github/">ваш_логин.github.io</a></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>Вводим свой урл до репозитория.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;your message&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<h1>3. Персональный домен</h1>

<p>Создаем файл с именем CNAME содержащий ваше доменное имя.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;your-domain.com&#39;</span> &gt;&gt; <span class="nb">source</span>/CNAME
</span></code></pre></td></tr></table></div></figure>


<p>На вашем DNS сервере <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">прописываем А запись</a></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>example.com.  3259    IN      A       204.232.175.78
</span></code></pre></td></tr></table></div></figure>


<h1>4. Автоматизация</h1>

<p>Octopress поддерживает автоматизацию типовых задач пользователя.</p>

<p>Список все задач можно посмотреть командой</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake --task
</span><span class='line'>rake clean                     <span class="c"># Clean out caches: .pygments-cache, .gist-cache, .sass-cache</span>
</span><span class='line'>rake copydot<span class="o">[</span><span class="nb">source</span>,dest<span class="o">]</span>      <span class="c"># copy dot files for deployment</span>
</span><span class='line'>rake deploy                    <span class="c"># Default deploy task</span>
</span><span class='line'>rake gen_deploy                <span class="c"># Generate website and deploy</span>
</span><span class='line'>rake generate                  <span class="c"># Generate jekyll site</span>
</span><span class='line'>rake install<span class="o">[</span>theme<span class="o">]</span>            <span class="c"># Initial setup for Octopress: copies the default theme into the path of J...</span>
</span><span class='line'>rake integrate                 <span class="c"># Move all stashed posts back into the posts directory, ready for site gen...</span>
</span><span class='line'>rake isolate<span class="o">[</span>filename<span class="o">]</span>         <span class="c"># Move all other posts than the one currently being worked on to a tempora...</span>
</span><span class='line'>rake list                      <span class="c"># list tasks</span>
</span><span class='line'>rake new_page<span class="o">[</span>filename<span class="o">]</span>        <span class="c"># Create a new page in source/(filename)/index.markdown</span>
</span><span class='line'>rake new_post<span class="o">[</span>title<span class="o">]</span>           <span class="c"># Begin a new post in source/_posts</span>
</span><span class='line'>rake preview                   <span class="c"># preview the site in a web browser</span>
</span><span class='line'>rake push                      <span class="c"># deploy public directory to github pages</span>
</span><span class='line'>rake rsync                     <span class="c"># Deploy website via rsync</span>
</span><span class='line'>rake set_root_dir<span class="o">[</span>dir<span class="o">]</span>         <span class="c"># Update configurations to support publishing to root or sub directory</span>
</span><span class='line'>rake setup_github_pages<span class="o">[</span>repo<span class="o">]</span>  <span class="c"># Set up _deploy folder and deploy branch for Github Pages deployment</span>
</span><span class='line'>rake update_source<span class="o">[</span>theme<span class="o">]</span>      <span class="c"># Move source to source.old, install source theme updates, replace source/...</span>
</span><span class='line'>rake update_style<span class="o">[</span>theme<span class="o">]</span>       <span class="c"># Move sass to sass.old, install sass theme updates, replace sass/custom w...</span>
</span><span class='line'>rake watch                     <span class="c"># Watch the site and regenerate when it changes</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Превращаем Raspberry Pi в домашний web-server]]></title>
    <link href="http://dordenis.github.io/linux/raspberry-pi-transform-the-home-web-server/"/>
    <updated>2013-07-15T20:21:00+04:00</updated>
    <id>http://dordenis.github.io/linux/raspberry-pi-transform-the-home-web-server</id>
    <content type="html"><![CDATA[<p>Не так давно приобрел забавную игрушку Raspberry Pi. Я планирую использовать ее в качестве «мозгов» для робота на базе Arduino, но об этом в другой раз. Что бы «малина» не валялась без дела. пока я проектирую робота, решил на базе нее поднять домашний web-server.
И так приступим…</p>

<!-- more -->


<h1>1. Устанавливаем образ “wheezy”</h1>

<p>Скачиваем образ с <a href="http://www.raspberrypi.org/downloads">официального сайта</a>
Распаковываем, на данный момент это 2013-05-29-wheezy-armel.img
Подключаем карточку флешь память к компьютеру
Копируем образ на флеш-карту <strong>dd if=/home/user/Download/2013-05-29-wheezy-armel.img of=/dev/sdN</strong>, где sdN — имя вашей флешь-карточки
После того как создали образ, заходим в <strong>/etc/network/interfaces</strong> и прописываем сетевые настройки</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>
</span><span class='line'>address 192.168.1.10
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 192.168.1.1
</span></code></pre></td></tr></table></div></figure>


<h1>2. Настройка операционной системы</h1>

<p>В консоле набираем</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo raspi-config
</span></code></pre></td></tr></table></div></figure>


<p>И получаем графическое меню</p>

<p><img src="http://dordenis.github.io/images/post/rasbbery_1-627x412.png"></p>

<ul>
<li><strong>expand_rootfs</strong> — здесь вы можете увеличить root размер на весь размер карты памяти</li>
<li><strong>change_pass</strong> — смена пароля пользователя «pi». При вводе пароль не отображается. Обязательно нужно сделать</li>
<li><strong>change_locate</strong> — установка языка системы</li>
<li><strong>memory_split</strong> — распределение памяти Raspberry Pi ставим 256</li>
<li><strong>overclock</strong> — разгон процессора Raspberry Pi, ставим Turbo тем более разработчики официально разрешили</li>
</ul>


<p>Остальные настройки по вашему желанию. После этого перегружаемся.
Не забудем обновить систему, командами</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get update sudo apt-get upgrade
</span></code></pre></td></tr></table></div></figure>


<h1>3. Установка web-server</h1>

<p>Устанавливаем все необходимое</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install nginx
</span><span class='line'>sudo apt-get install php5-fpm php5-common php5-mysql php5-gd
</span><span class='line'>sudo apt-get install mysql-server php5-mysql
</span></code></pre></td></tr></table></div></figure>


<p>Запускаем</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/etc/init.d/nginx nginx restart /etc/init.d/nginx php5-fpm restart
</span></code></pre></td></tr></table></div></figure>


<p>Проверяем, набираем в браузере <a href="http://192.168.1.10,">http://192.168.1.10,</a> если все сделали правильно, то должны увидеть надпись <strong>Welcome to nginx!</strong></p>

<h1>4. Настройка web-server</h1>

<p>Создаем файл /etc/nginx/sites-enabled/ajaxblog</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>server <span class="o">{</span>
</span><span class='line'>    listen 8080;
</span><span class='line'>
</span><span class='line'>    index index.php index.html;
</span><span class='line'>
</span><span class='line'>    server_name 192.168.1.10 ajaxblog.ru, www.ajaxblog.ru;
</span><span class='line'>    root /var/www/html/ajaxblog;
</span><span class='line'>
</span><span class='line'>    <span class="c"># Делаем красивые урлы location / {</span>
</span><span class='line'>        try_files <span class="nv">$uri</span> <span class="nv">$uri</span>/ /index.php?q<span class="o">=</span><span class="nv">$uri</span>&amp;<span class="nv">$args</span>;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Статичный контент отдаем напрямую с диска location ~* \.(xml|ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {</span>
</span><span class='line'>        try_files <span class="nv">$uri</span> <span class="o">=</span>404; access_log off; expires 7d;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># И наконец обработка php location ~ \.php$ {</span>
</span><span class='line'>        fastcgi_buffers 8 256k;
</span><span class='line'>        fastcgi_buffer_size 128k;
</span><span class='line'>        fastcgi_intercept_errors on;
</span><span class='line'>
</span><span class='line'>        include fastcgi_params;
</span><span class='line'>        fastcgi_pass unix:/var/run/php5-fpm.sock;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Создаем папку <strong>/var/www/html/ajaxblog</strong> куда заливаем wordpress</p>

<ol>
<li>Настройка DNS</li>
</ol>


<p>Наш сайт пока мы можем видеть только по локальному адресу <a href="http://192.168.1.10.">http://192.168.1.10.</a>
Для того чтобы мы могли видеть сайт по доменому имени <a href="http://ajaxblog.ru,">http://ajaxblog.ru,</a> нам нужно:</p>

<p>Прописать DNS запись у регистратора домена</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>@ A X.X.X.X www A X.X.X.X <span class="c"># X.X.X.X - IP адрес моего провайдера</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь нужно чтобы запрос пришедший на X.X.X.X, был перенаправлен домашним роутером на Raspberry Pi.
Для этого в админки вашего роутера нужно настроить перенаправление.
Заходим на вкладку <strong>NAT Setting — Virtual Server</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Port Range  80
</span><span class='line'>Local IP    192.168.1.10 <span class="c">#локальный ip Raspberry Pi</span>
</span><span class='line'>Local Port  80
</span><span class='line'>Protocol    TCP
</span><span class='line'>Description HTTP Server
</span></code></pre></td></tr></table></div></figure>


<p>Через какое-то время обновиться DNS запись у провайдера и можно смело смотреть свой блог по адресу <a href="http://ajaxblog.ru">http://ajaxblog.ru</a></p>
]]></content>
  </entry>
  
</feed>
