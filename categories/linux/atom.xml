<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Ajaxblog]]></title>
  <link href="http://dordenis.github.io/categories/linux/atom.xml" rel="self"/>
  <link href="http://dordenis.github.io/"/>
  <updated>2014-10-15T09:51:49-04:00</updated>
  <id>http://dordenis.github.io/</id>
  <author>
    <name><![CDATA[AjaxBlog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Как прочитать pdf файл в консоле]]></title>
    <link href="http://dordenis.github.io/linux/console-pdf-viewer/"/>
    <updated>2014-09-23T14:21:00-04:00</updated>
    <id>http://dordenis.github.io/linux/console-pdf-viewer</id>
    <content type="html"><![CDATA[<p>Как то нужно было быстро посмотреть pdf файл в консоле. Быстрое гугление показало, что нет готовых читалок под консоль. Но можно использовать хитрый трюк.</p>

<p><img src="/images/post/console-pdf-viewer/1.png"></p>

<p><strong>pdftohtml</strong> &ndash; инструмент командной строки для преобразования PDF-файлов в HTML и другие форматы.</p>

<!-- more -->


<h3><strong>Устанавливаем</strong></h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install pdftohtml
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3><strong>Используем</strong></h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pdftohtml some_file.pdf
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>а дальше уже смотрим в каким-то текстовом браузере</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>lynx some_file.pdf
</span><span class='line'>// or
</span><span class='line'>elinks some_file.pdf
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>если не установлен не один из них, не беда, конвертируем в простой текст</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pdftotext some_file.pdf
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как настроить динамические виртуальные хосты для веб-разработки]]></title>
    <link href="http://dordenis.github.io/linux/how-to-set-up-dynamic-virtual-hosts-for-web-development/"/>
    <updated>2014-06-22T20:21:00-04:00</updated>
    <id>http://dordenis.github.io/linux/how-to-set-up-dynamic-virtual-hosts-for-web-development</id>
    <content type="html"><![CDATA[<p>После того как умер мой винчестер на ноутбуки и встала проблема заново поднять рабочее окружение, я задумался о том, чтобы использовать в качестве такого, образ на виртуальной машины.  Данная тема, довольно старая, все не как не доходили руки. Но коль делать все правильно, решил заодно решить проблему автоматически создания виртуальных хостов под проекты.</p>

<p>Что это дает, мы создаем папку с названием проекта myproject  и сразу имеем доступ к нему по адресу <a href="http://">http://</a> myproject.dev, не плохо правда.</p>

<!-- more -->


<h1>1. Настройка домена *.dev</h1>

<p>Ставим dnsmasq</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install dnsmasq
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>в /etc/dnsmasq.d/devtld.conf</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>listen-address<span class="o">=</span>127.0.0.1
</span><span class='line'><span class="nv">address</span><span class="o">=</span>/.dev/192.168.0.10 ;192.168.0.10 – ip вашей виртуальной машины
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Перезапускаем сервис</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service dnsmasq restart
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Проверяем работу</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ping test.dev&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PING test.dev <span class="o">(</span>192.168.0.10<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span><span class='line'>64 bytes from localhost.localdomain <span class="o">(</span>192.168.0.10<span class="o">)</span>: <span class="nv">icmp_req</span><span class="o">=</span>1 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>0.019 ms
</span><span class='line'>64 bytes from localhost.localdomain <span class="o">(</span>192.168.0.10<span class="o">)</span>: <span class="nv">icmp_req</span><span class="o">=</span>2 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>0.034 ms
</span><span class='line'>64 bytes from localhost.localdomain <span class="o">(</span>192.168.0.10<span class="o">)</span>: <span class="nv">icmp_req</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>0.035 ms
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>2. Настройка веб-сервера</h1>

<p>Настроим наш веб сервер, в качестве такого у меня выступает ngnix. Данный конфиг является отправной точкой создания вашего собственного.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>server <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;listen 80;
</span><span class='line'>server_name .dev;
</span><span class='line'>
</span><span class='line'><span class="c"># dynamic vhosts for development</span>
</span><span class='line'><span class="nb">set</span> <span class="nv">$basepath</span> <span class="s2">&quot;/path/to/your/workspace&quot;</span>;
</span><span class='line'>
</span><span class='line'><span class="nb">set</span> <span class="nv">$domain</span> <span class="nv">$host</span>;
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="nv">$domain</span> ~ <span class="s2">&quot;^(.*)\.dev$&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">set</span> <span class="nv">$domain</span> <span class="nv">$1</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nb">set</span> <span class="nv">$rootpath</span> <span class="s2">&quot;${domain}&quot;</span>;
</span><span class='line'><span class="k">if</span> <span class="o">(</span>-d <span class="nv">$basepath</span>/<span class="nv">$domain</span>/public<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">set</span> <span class="nv">$rootpath</span> <span class="s2">&quot;${domain}/public&quot;</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>-d <span class="nv">$basepath</span>/<span class="nv">$domain</span>/httpdocs<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">set</span> <span class="nv">$rootpath</span> <span class="s2">&quot;${domain}/httpdocs&quot;</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>-d <span class="nv">$basepath</span>/<span class="nv">$domain</span>/web<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">set</span> <span class="nv">$rootpath</span> <span class="s2">&quot;${domain}/web&quot;</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>-f <span class="nv">$basepath</span>/<span class="nv">$domain</span>/index.php<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">set</span> <span class="nv">$rootpath</span> <span class="nv">$domain</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>-f <span class="nv">$basepath</span>/<span class="nv">$domain</span>/index.html<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">set</span> <span class="nv">$rootpath</span> <span class="nv">$domain</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>root <span class="nv">$basepath</span>/<span class="nv">$rootpath</span>;
</span><span class='line'>
</span><span class='line'><span class="c"># enable PHP</span>
</span><span class='line'>index index.php app.php index.html;
</span><span class='line'>location / <span class="o">{</span>
</span><span class='line'>    index index.php;
</span><span class='line'>    error_page <span class="nv">404</span> <span class="o">=</span> @indexphp;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>location @indexphp <span class="o">{</span>
</span><span class='line'>    rewrite ^<span class="o">(</span>.*<span class="o">)</span><span class="nv">$ </span>/index.php<span class="nv">$1</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>location ~ ^<span class="o">(</span>.+<span class="se">\.</span>php<span class="o">)(</span>?:/.+<span class="o">)</span>?<span class="nv">$ </span><span class="o">{</span>
</span><span class='line'>    expires off;
</span><span class='line'>    fastcgi_pass 127.0.0.1:9000;
</span><span class='line'>    fastcgi_index index.php;
</span><span class='line'>    fastcgi_param SCRIPT_FILENAME <span class="nv">$document_root$fastcgi_script_name</span>;
</span><span class='line'>    fastcgi_split_path_info ^<span class="o">(</span>.+<span class="se">\.</span>php<span class="o">)(</span>/.*<span class="o">)</span><span class="nv">$;</span>
</span><span class='line'>    include fastcgi_params;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c"># rewrite to index.php for pretty URL&#39;s</span>
</span><span class='line'>try_files <span class="nv">$uri</span> <span class="nv">$uri</span>/ /index.php?<span class="nv">$args</span>;
</span><span class='line'>
</span><span class='line'><span class="c"># block .ht* access</span>
</span><span class='line'>location ~ /<span class="se">\.</span>ht <span class="o">{</span>
</span><span class='line'>    deny all;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Для Apache</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;Virtualhost *:80&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;VirtualDocumentRoot <span class="s2">&quot;/path/to/your/workspace/%1/public&quot;</span>
</span><span class='line'>ServerName vhosts.dev
</span><span class='line'>ServerAlias *.dev
</span><span class='line'>UseCanonicalName Off
</span><span class='line'>&amp;lt;Directory <span class="s2">&quot;/path/to/your/workspace/*&quot;</span>&amp;gt;
</span><span class='line'>    Options Indexes FollowSymLinks MultiViews
</span><span class='line'>    AllowOverride All
</span><span class='line'>    Order allow,deny
</span><span class='line'>    Allow from all
</span><span class='line'>&amp;lt;/Directory&amp;gt;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/Virtualhost&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Превращаем Raspberry Pi в домашний web-server]]></title>
    <link href="http://dordenis.github.io/linux/raspberry-pi-transform-the-home-web-server/"/>
    <updated>2013-07-15T20:21:00-04:00</updated>
    <id>http://dordenis.github.io/linux/raspberry-pi-transform-the-home-web-server</id>
    <content type="html"><![CDATA[<p>Не так давно приобрел забавную игрушку Raspberry Pi. Я планирую использовать ее в качестве «мозгов» для робота на базе Arduino, но об этом в другой раз. Что бы «малина» не валялась без дела. пока я проектирую робота, решил на базе нее поднять домашний web-server.
И так приступим…</p>

<!-- more -->


<h1>1. Устанавливаем образ “wheezy”</h1>

<p>Скачиваем образ с <a href="http://www.raspberrypi.org/downloads">официального сайта</a>
Распаковываем, на данный момент это 2013-05-29-wheezy-armel.img
Подключаем карточку флешь память к компьютеру
Копируем образ на флеш-карту <strong>dd if=/home/user/Download/2013-05-29-wheezy-armel.img of=/dev/sdN</strong>, где sdN — имя вашей флешь-карточки
После того как создали образ, заходим в <strong>/etc/network/interfaces</strong> и прописываем сетевые настройки</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;auto eth0
</span><span class='line'>iface eth0 inet static&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;address 192.168.1.10
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 192.168.1.1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>2. Настройка операционной системы</h1>

<p>В консоле набираем
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo raspi-config
</span></code></pre></td></tr></table></div></figure></notextile></div>
И получаем графическое меню</p>

<p><img src="/images/post/rasbbery_1-627x412.png"></p>

<ul>
<li><strong>expand_rootfs</strong> — здесь вы можете увеличить root размер на весь размер карты памяти</li>
<li><strong>change_pass</strong> — смена пароля пользователя «pi». При вводе пароль не отображается. Обязательно нужно сделать</li>
<li><strong>change_locate</strong> — установка языка системы</li>
<li><strong>memory_split</strong> — распределение памяти Raspberry Pi ставим 256</li>
<li><strong>overclock</strong> — разгон процессора Raspberry Pi, ставим Turbo тем более разработчики официально разрешили</li>
</ul>


<p>Остальные настройки по вашему желанию. После этого перегружаемся.
Не забудем обновить систему, командами
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get update sudo apt-get upgrade
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>3. Установка web-server</h1>

<p>Устанавливаем все необходимое
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install nginx
</span><span class='line'>sudo apt-get install php5-fpm php5-common php5-mysql php5-gd
</span><span class='line'>sudo apt-get install mysql-server php5-mysql
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Запускаем
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/etc/init.d/nginx nginx restart /etc/init.d/nginx php5-fpm restart
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Проверяем, набираем в браузере <a href="http://192.168.1.10,">http://192.168.1.10,</a> если все сделали правильно, то должны увидеть надпись <strong>Welcome to nginx!</strong></p>

<h1>4. Настройка web-server</h1>

<p>Создаем файл /etc/nginx/sites-enabled/ajaxblog
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>server <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;listen 8080;
</span><span class='line'>
</span><span class='line'>index index.php index.html;
</span><span class='line'>
</span><span class='line'>server_name 192.168.1.10 ajaxblog.ru, www.ajaxblog.ru;
</span><span class='line'>root /var/www/html/ajaxblog;
</span><span class='line'>
</span><span class='line'><span class="c"># Делаем красивые урлы location / {</span>
</span><span class='line'>    try_files <span class="nv">$uri</span> <span class="nv">$uri</span>/ /index.php?q<span class="o">=</span><span class="nv">$uri</span>&amp;amp;<span class="nv">$args</span>;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Статичный контент отдаем напрямую с диска location ~* \.(xml|ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {</span>
</span><span class='line'>    try_files <span class="nv">$uri</span> <span class="o">=</span>404; access_log off; expires 7d;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># И наконец обработка php location ~ \.php$ {</span>
</span><span class='line'>    fastcgi_buffers 8 256k;
</span><span class='line'>    fastcgi_buffer_size 128k;
</span><span class='line'>    fastcgi_intercept_errors on;
</span><span class='line'>
</span><span class='line'>    include fastcgi_params;
</span><span class='line'>    fastcgi_pass unix:/var/run/php5-fpm.sock;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Создаем папку <strong>/var/www/html/ajaxblog</strong> куда заливаем wordpress</p>

<ol>
<li>Настройка DNS</li>
</ol>


<p>Наш сайт пока мы можем видеть только по локальному адресу <a href="http://192.168.1.10.">http://192.168.1.10.</a>
Для того чтобы мы могли видеть сайт по доменому имени <a href="http://ajaxblog.ru,">http://ajaxblog.ru,</a> нам нужно:</p>

<p>Прописать DNS запись у регистратора домена
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>@ A X.X.X.X www A X.X.X.X <span class="c"># X.X.X.X &amp;ndash; IP адрес моего провайдера</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Теперь нужно чтобы запрос пришедший на X.X.X.X, был перенаправлен домашним роутером на Raspberry Pi.
Для этого в админки вашего роутера нужно настроить перенаправление.
Заходим на вкладку <strong>NAT Setting — Virtual Server</strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Port Range  80
</span><span class='line'>Local IP    192.168.1.10 <span class="c">#локальный ip Raspberry Pi</span>
</span><span class='line'>Local Port  80
</span><span class='line'>Protocol    TCP
</span><span class='line'>Description HTTP Server
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Через какое-то время обновиться DNS запись у провайдера и можно смело смотреть свой блог по адресу <a href="http://ajaxblog.ru">http://ajaxblog.ru</a></p>
]]></content>
  </entry>
  
</feed>
