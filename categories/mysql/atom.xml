<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql | Ajaxblog]]></title>
  <link href="http://dordenis.github.io/categories/mysql/atom.xml" rel="self"/>
  <link href="http://dordenis.github.io/"/>
  <updated>2015-12-21T02:59:44-05:00</updated>
  <id>http://dordenis.github.io/</id>
  <author>
    <name><![CDATA[Denis Doroshenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Шпарагалка по Mysqldump]]></title>
    <link href="http://dordenis.github.io/mysql/cheatsheet-on-mysqldump/"/>
    <updated>2013-08-05T00:00:00-04:00</updated>
    <id>http://dordenis.github.io/mysql/cheatsheet-on-mysqldump</id>
    <content type="html"><![CDATA[<p>Утилита mysqldump позволяет получить дамп содержимого базы данных или совокупности баз для создания резервной копии или пересылки данных на другой SQL-сервер (не обязательно MySQL-сервер). Дамп будет содержать набор команд SQL для создания и/или заполнения таблиц.</p>

<p>Так же mysqldump имеет возможность развертывания баз данных из созданного sql-файла.</p>

<!-- more -->


<h3>Создание дампа</h3>

<p>Разберем пример простейшее использования, задампим базу данных “database” при помощи перенаправления потока в файл “database.sql”:</p>

<p>{% codeblock lang:sh %}
mysqldump -u root -h 82.82.82.82 -p database > database.sql
{% endcodeblock %}</p>

<ul>
<li><strong>-u</strong> или <strong>&mdash;user</strong>=… – имя пользователя</li>
<li><strong>-h</strong> или <strong>&mdash;host</strong>=… – удаленный хост (для локального хоста можно опустить этот параметр)</li>
<li><strong>-p</strong> или <strong>&mdash;password</strong> – запросить пароль</li>
<li><strong>database</strong> – имя базы данных</li>
<li><strong>database.sql</strong> – файл для дампа</li>
</ul>


<h3>Развертывание дампа</h3>

<p>Перенаправляем поток в обратную сторону и развертываем базу данных:</p>

<p>{% codeblock lang:sh %}
mysql -uroot -h 82.82.82.82 -p database &lt; database.sql
{% endcodeblock %}</p>

<p>Или через mysql console:</p>

<p>{% codeblock lang:sh %}
mysql> use database;
mysql> source database.sql
{% endcodeblock %}</p>

<h3>Пример использование некоторых параметров</h3>

<p>Например, нам нужны данные с “продакшен версии базы” для “версии разработчика”, то есть нам нужна “песочница”. Выбираем не более 100 записей:</p>

<p>{% codeblock lang:sh %}
mysqldump &ndash; uroot -h 82.82.82.82 -p &mdash;where=&ldquo;true limit 100&rdquo; database > database.sql
{% endcodeblock %}</p>

<p>Или нам нужна только структура, без данных:</p>

<p>{% codeblock lang:sh %}
mysqldump -u root -h 82.82.82.82 -p &mdash;no-data database > database.sql
{% endcodeblock %}</p>

<p>Делаем дамп в архив:</p>

<p>{% codeblock lang:sh %}
mysqldump -u root -p database | gzip > ~/database.sql.gz
{% endcodeblock %}</p>

<h3>Шпаргалка по параметрам</h3>

<p>Приведу некоторые параметры, которые могут понадобится при работе с утилитой mysqldump.</p>

<ul>
<li><strong>—add-drop-database</strong> Добавляет оператор DROP DATABASE перед каждым оператором CREATE DATABASE.</li>
<li><strong>—add-drop-table</strong> Добавляет оператор DROP TABLE перед каждым оператором CREATE TABLE.</li>
<li><strong>—add-locks</strong> Добавляет оператор LOCK TABLES перед выполнением и UNLOCK TABLE после выполнения каждого дампа таблицы (для ускорения доступа к MySQL).</li>
<li><strong>—all-databases, -A</strong> Сохраняет все таблицы из всех баз данных, которые находятся под управлением текущего сервера.</li>
<li><strong>—allow-keywords</strong> Разрешить создавать имена столбцов, которые совпадают с ключевыми словами. Отсутствие конфликтов обеспечивается прибавлением имени таблицы в качестве префикса к имени каждого столбца.</li>
<li><strong>—comments, -i</strong> Данный параметр позволяет добавить в дамп дополнительную информацию, такую, как версия mysqldump, версия MySQL, имя хоста, на котором расположен сервер MySQL.</li>
<li><strong>—compact</strong> Данный параметр требует от mysqldump создать дамп, используя как можно более компактный формат. Параметр является противоположным —comments.</li>
<li><strong>—compatible=name</strong> Параметр генерирует вывод, который совместим с другими СУБД или более старыми версиями MySQL. Вместо ключевого слова name можно использовать: “ansi”, “mysql323”, “mysql40”, “postgresql”, “oracle”, “mssql”, “db2”, “maxdb”, “no_key_options”, “no_table_options”, “no_field_options”. Можно использовать несколько значений, разделив их запятыми.</li>
<li><strong>—complete-insert, -c</strong> Используется полная форма оператора INSERT (с именами столбцов).</li>
<li><strong>—create-options</strong> Добавляет дополнительную информацию в операторы CREATE TABLE. Это может быть тип таблицы, начальное значение AUTO_INCREMENT и другие параметры.</li>
<li><strong>—databases, -B</strong> Параметр позволяет указать имена нескольких баз данных, для которых необходимо создать дамп.</li>
<li><strong>—delayed</strong> Использовать команду INSERT DELAYED при вставке строк.</li>
<li><strong>—delete-master-logs</strong> На главном сервере репликации автоматически удаляются бинарные логи (logbin) после того, как дамп был успешно создан при помощи mysqldump. Этот параметр автоматически включает параметр “—master-data”.</li>
<li><strong>—disable-keys, -K</strong> Для каждой таблицы, окружает оператор INSERT выражениями /!40000 ALTER TABLE tbl_name DISABLE KEYS /; и /!40000 ALTER TABLE tbl_name ENABLE KEYS /; в выводе результата дампа. Это ускорит загрузку данных на сервер для таблиц типа MyISAM, так как индексы создаются после внесения всех данных.</li>
<li><strong>—extended-insert, -e</strong> Использовать команду INSERT с новым многострочным синтаксисом (повышает компактность и быстродействие операторов ввода).</li>
<li><strong>—flush-logs, -F</strong> Записать на диск данные системного журнала из буфера MySQL-сервера перед началом выполнения дампа.</li>
<li><strong>—force, -f</strong> Продолжать даже если в процессе создания дампа произошла ошибка.</li>
<li><strong>—hex-blob</strong> Параметр позволяет представить бинарные данные в полях типа BINARY, VARBINARY, BLOB и BIT в шестнадцатеричном формате. Так последовательность “abc” будет заменена на 0x616263.</li>
<li><strong>—ignore-table=db_name.tbl_name</strong> Позволяет игнорировать таблицу tbl_name базы данных db_name при создании дампа. Если из дампа необходимо исключить несколько таблиц, необходимо использовать несколько параметров “—ignore-table”, указывая по одной таблице в каждом из параметров.</li>
<li><strong>—insert-ignore</strong> Добавляет ключевое слово IGNORE в оператор INSERT.</li>
<li><strong>—lock-all-tables, -x</strong> Указание этого параметра приводит к блокировке всех таблиц во всех базах данных на время создания полного дампа всех баз данных.</li>
<li><strong>—lock-tables, -l</strong> Указание этого параметра приводит к блокировке таблиц базы данных, для которой создается дамп.</li>
<li>**—no-autocommit Включает все операторы INSERT, относящиеся к одной таблице, в одну транзакцию, что приводит к увеличению скорости загрузки данных.</li>
<li><strong>—no-create-db, -n</strong> Подавляет создание в дампе операторов CREATE DATABASE, которые автоматически добавляются при использовании параметров —databases и —all-databases.</li>
<li><strong>—no-data, -d</strong> Подавляет создание операторов INSERT в дампе, что может быть полезно при создании дампа структуры базы данных без самих данных.</li>
<li><strong>—opt</strong> Параметр предназначен для оптимизации скорости резервирования данных и является сокращением, включающим следующие опции: —quick —add-drop-table —add-locks —create-options —disable-keys —extended-insert —lock-tables —set-charset. Начиная с MySQL 4.1, параметр —opt используется по умолчанию, т.е. все вышеперечисленные параметры включаются по умолчанию, даже если они не указываются. Для того чтобы исключить такое поведение, необходимо воспользоваться параметров —skip-opt</li>
<li><strong>—order-by-primary</strong> Указание параметра приводит к тому. что каждая таблица сортируется по первичному ключу или первому уникальному индексу.</li>
<li><strong>—port, -P</strong> Номер TCP порта, используемого для подключения к хосту.</li>
<li><strong>—protocol={TCP|SOCKET|PIPE|MEMORY}</strong> Параметр позволяет задать протокол подключения к серверу.</li>
<li><strong>—quick, -q</strong> Позволяет начать формирование дампа, не дожидаясь полной загрузки данных с сервера и экономя тем самым память.</li>
<li><strong>—quote-names, -Q</strong> Помещает имена баз данных, таблиц и столбцов в обратные апострофы `. Начиная с MySQL 4.1, данный параметр включен по умолчанию.</li>
<li><strong>—replace</strong> Добавляет ключевое слово REPLACE в оператор INSERT. Данный параметр впервые появился в MySQL 5.1.3.</li>
<li><strong>—result-file=/path/to/file, -r /path/to/file</strong> Параметр направляет дамп в файл file. Этот параметр особенно удобен в Windows, без использования командной строки. когда можно перенаправить результат в файл при помощи последовательностей > и >>.</li>
<li><strong>—routines, -R</strong> Данный параметр создает дамп хранимых процедур и функций. Доступен с MySQL 5.1.2.</li>
<li><strong>—single-transaction</strong> Параметр создает дамп в виде одной транзакции.</li>
<li><strong>—skip-comments</strong> Данный параметр позволяет подавить вывод в дамп дополнительной информации.</li>
<li><strong>—socket=/path/to/socket, -S /path/to/socket</strong> Файл сокета для подсоединения к localhost.</li>
<li><strong>—tab=/path/, -T /path/</strong> При использовании этого параметра в каталоге path для каждой таблицы создаются два отдельных файла: tbl_name.sql, содержащий оператор CREATE TABLE, и tbl_name.txt, который содержит данные таблиц, разделенные символом табуляции. Формат данных может быть переопределен явно с помощью параметров —fields-xxx и —lines-xxx.</li>
<li><strong>—tables</strong> Перекрывает действия параметра —databases (-B). Все аргументы, следующие за этим параметром, трактуются как имена таблиц.</li>
<li><strong>—triggers</strong> Создается дамп триггеров. Этот параметр включен по умолчанию. для его отключения следует использовать параметр —skip-triggers.</li>
<li><strong>—events, -E</strong> Создается дамп событий. Смотрите MySQL Event Scheduler или встроенный диспетчер событий в MySQL.</li>
<li><strong>—tz-utc</strong> при использовании данного параметра в дамп будет добавлен оператор вида SET TIME_ZONE=‘+00:00’, который позволит обмениваться дампа в различных временных зонах.</li>
<li><strong>—verbose, -v</strong> Расширенный режим вывода. Вывод более детальной информации о работе программы.</li>
<li><strong>—version, -V</strong> Вывести информацию о версии программы.</li>
<li><strong>—where=‘where-condition’, -w ‘where-condition’</strong> Выполнить дамп только выбранных записей. Обратите внимание, что кавычки обязательны.</li>
<li><strong>—xml, -X</strong> Представляет дамп базы данных в виде XML.</li>
<li><strong>—first-slave, -x</strong> Блокирует все таблицы во всех базах данных.</li>
<li><strong>—debug=…, –#</strong> Отслеживать прохождение программы (для отладки).</li>
<li><strong>—help</strong> Вывести справочную информацию и выйти из программы.</li>
</ul>

]]></content>
  </entry>
  
</feed>
