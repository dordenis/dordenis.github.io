<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ruby | Ajaxblog]]></title>
  <link href="http://dordenis.github.io/tags/ruby/atom.xml" rel="self"/>
  <link href="http://dordenis.github.io/"/>
  <updated>2013-08-06T19:20:45+04:00</updated>
  <id>http://dordenis.github.io/</id>
  <author>
    <name><![CDATA[AjaxBlog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Создание плагинов для Octopress]]></title>
    <link href="http://dordenis.github.io/octopress/creating-plugins-for-octopress/"/>
    <updated>2013-07-22T01:04:00+04:00</updated>
    <id>http://dordenis.github.io/octopress/creating-plugins-for-octopress</id>
    <content type="html"><![CDATA[<p>Octopress идет с несколькими предустановленными плагинами. Которые охватывают практически все аспекты блоггерства, от категории до видео. Плагины можно легко создавать, расширяя базовый функционал Octopress. Создадим плагин который добавит новый тег для шаблонизатора Liquid.</p>

<p>В качестве примера, создадим новый тег, который позволит вставлять картинки размещенные на S3 Amazon.</p>

<!-- more -->


<p>Создадим файл s3_image_tag.rb.</p>

<ul>
<li>Определим новый класс наследуемый от Liquid::Tag</li>
</ul>


<p>{% codeblock lang:ruby %}
module Jekyll
  class S3ImageTag &lt; Liquid::Tag</p>

<pre><code># здесь будет наш код
</code></pre>

<p>  end
end
{% endcodeblock %}</p>

<p>Все теги шаблонизатора Liquid наследуютьса от класса Liquid::Tag. Liquid ожидает что класс имеет метод render который и  реализует отрисовку тега.</p>

<ul>
<li>Инициализация параметров</li>
</ul>


<p>{% codeblock lang:ruby %}
def initialize(tag_name, text, token)
  super
  @text = text.strip
  @text =~ /(\w+.\w+)(\sbucket:)?(\w*)/i
  @file_name = $1
  @bucket_name = $3.empty? ? Jekyll.configuration({})[&lsquo;aws_bucket&rsquo;] : $3
end
{% endcodeblock %}</p>

<p>Обратите внимание, что Liquid вызовет наш метод инициализации с тремя параметрами: имя тега, текст в самом теге, и маркер.</p>

<p>Во первых, мы вызвали метод super, для инициализации родительского класса. Далее, мы очистили текст от начальных и конечных пробелов. С помощью регулярного выражения нашли необходимые значения для наших переменных. Для переменной @bucket_name, если она не найдена, берем значения из конфигфайла _config.yml.</p>

<ul>
<li>Определим метод render</li>
</ul>


<p>{% codeblock lang:ruby %}
def render(context)
  if @file_name &amp;&amp; @bucket_name</p>

<pre><code>"&lt;img src='https://s3.amazonaws.com/#{@bucket_name}/#{@file_name}'&gt;"
</code></pre>

<p>  else</p>

<pre><code>"Error processing input."
</code></pre>

<p>  end
end
{% endcodeblock %}</p>

<p>Отдаем HTML тег для нужного изображения. Если один из параметров отсутствует, возвращаемся сообщением об ошибке.</p>

<ul>
<li>Регистрируем новый тег</li>
</ul>


<p>{% codeblock lang:ruby %}
Liquid::Template.register_tag(&lsquo;s3_image&rsquo;, Jekyll::S3ImageTag)
{% endcodeblock %}</p>

<p>Liquid::Template привязывает тег s3_image к нашему классу Jekyll::S3ImageTag, который и будет его обрабатывать.</p>

<ul>
<li><p>Добавляем наш файл s3_image_tag.rb в папку plugins нашего блога.  Octopress автоматически загружает все плагины из этой папки.</p></li>
<li><p>Зададим значение по умолчанию для переменой aws_bucket в конфиге _config.yml</p></li>
</ul>


<p>{% codeblock lang:sh %}</p>

<h1>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</h1>

<h1>3rd Party Settings</h1>

<h1>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</h1>

<h1>Amazon S3 Images</h1>

<p>aws_bucket: thoughts_on_rails
{% endcodeblock %}</p>

<ul>
<li>Пример использование нового тега в наших постах</li>
</ul>


<p>{% codeblock lang:html %}
Here is an image:  {% raw %} {% s3_image foo.jpeg bucket:bar %} {% endraw %}
{% endcodeblock %}</p>

<p>P.S. Оригинальный источник <a href="http://www.thoughtsonrails.com/creating-plugins-for-octopress/">http://www.thoughtsonrails.com/creating-plugins-for-octopress/</a></p>
]]></content>
  </entry>
  
</feed>
